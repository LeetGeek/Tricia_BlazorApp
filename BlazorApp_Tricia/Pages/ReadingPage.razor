@page "/readingPage"

@inject NavigationManager NavManager
@inject StudentService StudentService
@inject WebsiteService WebsiteService


<style>
    * {
        margin: 0;
        padding: 0;
    }
    .imgbox {
        display: grid;
        height: 90%;
    }
    .center-fit {
        max-width: 90%;
        max-height: 90vh;
        margin: auto;
    }
</style>

@if (string.IsNullOrWhiteSpace(timeDisplay))
{
    <label>Loading...</label>
}
else
{
    <div style="text-align: center;">
        <span><label>Remaining Time: </label> @timeDisplay</span>
    </div>


    <div class="imgbox">
        <img class="center-fit" src="img/Ferment_Textbook image.jpg">
    </div> 
}


@code {
    private static System.Timers.Timer timer;

    private string timeDisplay = "";

    private int minutes = 0;
    private int seconds = 0;
    private int totalSeconds;

    protected override Task OnInitializedAsync()
    {
        var data = WebsiteService.GetWebsiteData();
        var tokens = data.ReadingPaneTotalTime.Split(new char[] { ':' });
        minutes = int.Parse(tokens[0]);
        seconds = int.Parse(tokens[1]);


        totalSeconds = minutes * 60 + seconds;

        timer = new System.Timers.Timer(1000);
        timer.Elapsed += CountDownTimer;
        timer.Enabled = true;

        return base.OnInitializedAsync();
    }

    public void CountDownTimer(Object source, System.Timers.ElapsedEventArgs e)
    {
        if (totalSeconds > 0)
        {
            totalSeconds -= 1;
            timeDisplay = $"{(int)totalSeconds/60:D2}:{totalSeconds % 60:D2}";
        }
        else
        {
            timer.Enabled = false;
            timer.Dispose();
            NavManager.NavigateTo("/BeforeQuestionsStart");
        }
        InvokeAsync(StateHasChanged); // updates webpage
    }

    public void Dispose()
    {
        timer.Enabled = false;
        timer.Dispose();
    }
}
